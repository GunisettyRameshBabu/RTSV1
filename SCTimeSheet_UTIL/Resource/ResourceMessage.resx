<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IncorrectPassword" xml:space="preserve">
    <value>Incorrect Password</value>
  </data>
  <data name="IncorrectUsername" xml:space="preserve">
    <value>Incorrect Email</value>
  </data>
  <data name="InvalidUser" xml:space="preserve">
    <value>Incorrect Username or Password</value>
  </data>
  <data name="InvolveMonthValid" xml:space="preserve">
    <value>Data for this project already exist</value>
  </data>
  <data name="InvolvePercent" xml:space="preserve">
    <value>Involve Percentage is Required</value>
  </data>
  <data name="InvolvePerEmpty" xml:space="preserve">
    <value>Involvement Percentage Required</value>
  </data>
  <data name="NewEntryApprove" xml:space="preserve">
    <value>Data Approved Successfully</value>
  </data>
  <data name="NewEntryDraft" xml:space="preserve">
    <value>Data saved as draft</value>
  </data>
  <data name="NewEntryRejected" xml:space="preserve">
    <value>Data is Rejected</value>
  </data>
  <data name="NewEntrySubmit" xml:space="preserve">
    <value>Data submitted successfully. Waiting for approval</value>
  </data>
  <data name="NewEntrySubmitOnBehalf" xml:space="preserve">
    <value>Data is approved successfully </value>
  </data>
  <data name="NewEntryUpdate" xml:space="preserve">
    <value>Data updated successfully</value>
  </data>
  <data name="NoRole" xml:space="preserve">
    <value>No role exists</value>
  </data>
  <data name="NotActive" xml:space="preserve">
    <value>User is not active</value>
  </data>
  <data name="ApproveRejComm" xml:space="preserve">
    <value>Approve/Reject Comment is Required</value>
  </data>
  <data name="InvolveMonthInValid" xml:space="preserve">
    <value>Please Select Valid Date</value>
  </data>
  <data name="DayscountExceed" xml:space="preserve">
    <value>Days Count is Exceeded</value>
  </data>
  <data name="NewProjectAdd" xml:space="preserve">
    <value>Project Details Added Successfully</value>
  </data>
  <data name="NewProjectUpdate" xml:space="preserve">
    <value>Project Details Updated Successfully</value>
  </data>
  <data name="NewProjectDelete" xml:space="preserve">
    <value>Project Details Deleted Successfully</value>
  </data>
  <data name="Startdate" xml:space="preserve">
    <value>Startdate is greater than Enddate </value>
  </data>
  <data name="NewProjectAddEmp" xml:space="preserve">
    <value>Project Details Successfully Assigned</value>
  </data>
  <data name="NewProjectAddEmpUpdate" xml:space="preserve">
    <value>Data Updated Successfully</value>
  </data>
  <data name="Alreadyexist" xml:space="preserve">
    <value>This Project is Already Assigned With this Employee</value>
  </data>
  <data name="Enddateexceed" xml:space="preserve">
    <value>Project Assignment  EndDate of Employee is greaterthan the Project End Date</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings Configured Successfully</value>
  </data>
  <data name="Invpercexceed" xml:space="preserve">
    <value> Involvment Percentage is Exceeded (More than 100 %)</value>
  </data>
</root>